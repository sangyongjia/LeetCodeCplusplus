class Solution {
public:
    double findMedianSortedArrays(vector<int>& nums1, vector<int>& nums2) 
    {
        std::vector<int> merge_array;
        std::vector<int>::iterator iter1 = nums1.begin();
        std::vector<int>::iterator iter2 = nums2.begin();
        double result=0;
        while(iter1 != nums1.end() && iter2 != nums2.end())
        {
            if(*iter1 <= *iter2)
            {
                merge_array.push_back(*iter1);
                iter1++;
            }
            else
            {
                merge_array.push_back(*iter2);
                iter2++;
            }
        }
        while(iter1 != nums1.end())
        {
            merge_array.push_back(*iter1);
            iter1++;
        }
        while(iter2 != nums2.end())
        {
            merge_array.push_back(*iter2);
            iter2++;
        }
        if(merge_array.size()%2==0)
        {
            int i=(int)(merge_array.size()/2);
            result+=merge_array[i];
            result+=merge_array[i-1];
            result/=2;
        }
        else
        {
            int i=(int)(merge_array.size()/2);
            result=merge_array[i];
        }
        return result;
    }
};
