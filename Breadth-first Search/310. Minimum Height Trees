///模仿别人的代码！
class Node{
    public:
    std::set<int> neighbor;
    bool leafNode(){
        if (neighbor.size()==1)
        {
            return true;
        }
        return false;
    }
};
class Solution {
public:
    vector<int> findMinHeightTrees(int n, vector<pair<int, int>>& edges) {
        vector<Node> tree(n);
        if(n==1)
        {
            vector<int> res(1,0);
            return res;
        }
        for(auto e:edges)
        {
            tree[e.first].neighbor.insert(e.second);
            tree[e.second].neighbor.insert(e.first);
        }
        vector<int> node1;
        vector<int> node2;
        for(int i=0;i<n;i++)
        {
            if(tree[i].neighbor.size()==1)
            {
                node1.push_back(i);      
            }
        }
        while(1)
        {
            for(auto e:node1)
            {
                for(set<int>::iterator it=tree[e].neighbor.begin();it!=tree[e].neighbor.end();it++)
                {
                    int ng=*it;
                    tree[ng].neighbor.erase(e);
                    if(tree[ng].leafNode())
                    {
                        node2.push_back(ng);
                    }
                }
            }
            if(node2.empty())
            {
                break;
            }
            node1.clear();
            swap(node1,node2);
        }
        return node1;
    }
};
