/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
 * };
 */
class Solution {
public:
    vector<int> largestValues(TreeNode* root) {
        vector<int> res;
        std::queue<TreeNode*> que;
        int max=numeric_limits<int>::min();
        if(root==NULL)
        {
            return res;
        }
        que.push(root);
        while(!que.empty())
        {
            int size=que.size();
            for(int i=0;i<size;i++)
            {
                TreeNode* temp=que.front();
                que.pop();
                if(temp==NULL)
                {
                    continue;
                }
                if(temp->left)
                    que.push(temp->left);
                if(temp->right)
                    que.push(temp->right);
                max = temp->val>max?temp->val:max;
            }
            res.push_back(max);
            max=numeric_limits<int>::min();
        }
        return res;
    }
};
