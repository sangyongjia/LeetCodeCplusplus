/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
 * };
 */
class Solution {
public:
    int findBottomLeftValue(TreeNode* root) {
        std::queue<TreeNode*> que;
        int size=0,res=0;
        TreeNode* temp=NULL;
        if(root!=NULL)
            que.push(root);
        else
            ;
        while(!que.empty())
        {
            size=que.size();
            for(int i=0;i<size;i++)
            {   
                temp=que.front();
                que.pop();
                if(temp==NULL)
                {
                    continue;
                }
                if(i==0)
                {
                    res=temp->val;
                }
                if(temp->left)
                    que.push(temp->left);
                if(temp->right)
                    que.push(temp->right);
            }
        }
        return res;
    }
};
