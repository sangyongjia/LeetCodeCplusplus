/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
class Solution {
public:
    ListNode* mergeKLists(vector<ListNode*>& lists) 
    {
        unsigned int flag=lists.size();
        //std::cout<<flag<<std::endl;
        for(unsigned int m=0;m<lists.size();m++)
        {
            if(lists[m]==NULL)
            {
                flag--;
            }
        }
        
        ListNode* dummy_head=new ListNode(-1);
        ListNode* cur=dummy_head;
        //std::cout<<1<<std::endl;
        
        while(flag!=0)
        {
            //int min=lists[0]->val;
            int min=2147483647;
            int j=0;
            for(int i=0;i<lists.size();i++)
            {
                if(lists[i]==NULL)
                {
                    continue;
                }
                if(lists[i]->val <= min)
                {
                    j=i;
                    min = lists[i]->val;
                }
            }
            cur->next=lists[j];
            cur=cur->next;
            lists[j]= lists[j]->next;
            cur->next=NULL;
            flag=lists.size();
            for(int m=0;m<lists.size();m++)
            {
                if(lists[m]==NULL)
                {
                    flag--;
                }
            }
             //std::cout<<min<<std::endl;
             // std::cout<<flag<<std::endl;
        }
        ListNode* new_head=dummy_head->next;
        delete dummy_head;
        return new_head;
    }
};
